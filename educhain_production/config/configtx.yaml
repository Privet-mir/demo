# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---

################################################################################
#
#   Section: Organizations
#
#   - This section defines the different org-devanizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg-dev defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg-dev
        # DefaultOrg-dev defines the org-devanization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererOrg-dev

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: ./OrdererMSP
        AdminPrincipal: Role.MEMBER
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('OrdererMSP.member')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('OrdererMSP.member')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('OrdererMSP.admin')"


        # turn off security for the channel

    - &MainOrg-dev
        # DefaultOrg-dev defines the org-devanization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: MainOrg-dev

        # ID to load the MSP definition as
        ID: MainOrg-devMSP

        MSPDir: ./PeerMSP

        # turn off security for the peer
        AdminPrincipal: Role.MEMBER
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('MainOrg-devMSP.admin', 'MainOrg-devMSP.peer', 'MainOrg-devMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('MainOrg-devMSP.admin', 'MainOrg-devMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('MainOrg-devMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org-dev gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            #- Host: peer1-educhain.mainorg-peer.svc.cluster.local
            - Host: mainorg-peer1-edu-peer.mainorg-peer.svc.cluster.local
              Port: 7051

    - &Org1
       # DefaultOrg-dev defines the org-devanization which is used in the sampleconfig
       # of the fabric.git development environment
       Name: Org1

       # ID to load the MSP definition as
       ID: Org1

       MSPDir: ./Org1MSP

       # turn off security for the peer
       AdminPrincipal: Role.MEMBER
    #    Policies:
    #      Readers:
    #        Type: Signature
    #        Rule: "OR('Org1.admin', 'Org1.peer', 'Org1.client')"
    #      Writers:
    #        Type: Signature
    #        Rule: "OR('Org1.admin', 'Org1.client')"
    #      Admins:
    #        Type: Signature
    #        Rule: "OR('Org1.admin')"


       AnchorPeers:
           # AnchorPeers defines the location of peers which can be used
           # for cross org-dev gossip communication.  Note, this value is only
           # encoded in the genesis block in the Application section context
           - Host: org1-peer1-edu-peer.org1.svc.cluster.local
             Port: 7051

    - &Org2
       # DefaultOrg-dev defines the org-devanization which is used in the sampleconfig
       # of the fabric.git development environment
       Name: Org2

       # ID to load the MSP definition as
       ID: Org2

       MSPDir: ./Org2MSP

       # turn off security for the peer
       AdminPrincipal: Role.MEMBER
    #    Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org2.admin', 'Org2.peer', 'Org2.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org2.admin', 'Org2.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org2.admin')"

       AnchorPeers:
           # AnchorPeers defines the location of peers which can be used
           # for cross org-dev gossip communication.  Note, this value is only
           # encoded in the genesis block in the Application section context
           - Host: org2-peer1-edu-peer.org2.svc.cluster.local
             Port: 7051
################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.3 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.3.x
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.3 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.3.0 or later.
        V1_3: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.1.x
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.1 orderer capabilities, ensure that all
        # orderers on a channel are at v1.1.0 or later.
        V1_1: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3.
        V1_3: true
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults
    ACLs: &ACLsDefaults
        peer/Propose: /Channel/Application/Writers
        event/Block: /Channel/Application/Org1Policy


    # Organizations is the list of org-devs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: kafka

    Addresses:
       - educhain1-orderer.orderer.svc.cluster.local:7050
       - educhain2-orderer.orderer.svc.cluster.local:7050
       - educhain3-orderer.orderer.svc.cluster.local:7050
        #- educhain1-orderer.orderer.svc.cluster.local:7050
        # - educhain2-orderer.orderer.svc.cluster.local:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 98 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
           - kafka-hlf.orderer.svc.cluster.local:9092

    # Organizations is the list of org-devs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"
################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities
################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    ComposerOrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg-dev
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            EduchainConsortium:
                Organizations:
                    - *MainOrg-dev
                    - *Org1
                    - *Org2
    EduchainChannel:
        Consortium: EduchainConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *MainOrg-dev
                - *Org1
                - *Org2
            Capabilities:
                <<: *ApplicationCapabilities